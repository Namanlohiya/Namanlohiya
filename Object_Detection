import cv2
import imutils

# Define color range for red in HSV
redLower = (86, 53, 64)
redUpper = (174, 192, 255)

# Initialize the camera
camera = cv2.VideoCapture(0)  # Change to (1) if you're using an external camera

if not camera.isOpened():
    print("Error: Could not open camera.")
    exit()

while True:
    grabbed, frame = camera.read()

    if not grabbed:
        print("Error: Could not read frame.")
        break

    # Resize frame
    frame = imutils.resize(frame, width=1000)

    # Apply Gaussian Blur
    blurred = cv2.GaussianBlur(frame, (11, 11), 0)

    # Convert to HSV color space
    hsv = cv2.cvtColor(blurred, cv2.COLOR_BGR2HSV)

    # Create mask for red color
    mask = cv2.inRange(hsv, redLower, redUpper)
    mask = cv2.erode(mask, None, iterations=2)
    mask = cv2.dilate(mask, None, iterations=2)

    # Find contours
    cnts, _ = cv2.findContours(mask.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)
    center = None

    if len(cnts) > 0:
        c = max(cnts, key=cv2.contourArea)
        ((x, y), radius) = cv2.minEnclosingCircle(c)
        M = cv2.moments(c)
        if M["m00"] != 0:  # Prevent division by zero
            center = (int(M["m10"] / M["m00"]), int(M["m01"] / M["m00"]))

            if radius > 10:
                # Draw the detected object
                cv2.circle(frame, (int(x), int(y)), int(radius), (0, 255, 255), 2)
                cv2.circle(frame, center, 5, (0, 0, 255), -1)
                print("cm", center, radius)

                # Define movement conditions
                if radius > 250:
                    print("Stop")
                else:
                    if center[0] < 150:
                        print("Right")
                    elif center[0] > 450:
                        print("Left")

    # Display the frame
    cv2.imshow("Frame", frame)

    # Exit on 'q' or 'Esc' key
    key = cv2.waitKey(1) & 0xFF
    if key == ord('q') or key == 27:  # 27 is the ASCII for 'Esc'
        break

# Release resources
camera.release()
cv2.destroyAllWindows()





